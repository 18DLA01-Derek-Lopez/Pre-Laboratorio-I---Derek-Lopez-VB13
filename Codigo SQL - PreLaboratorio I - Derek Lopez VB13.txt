CREATE DATABASE prelaboratorio1; -- Se crea una base de datos llamada prelaboratorio1
USE prelaboratorio1; -- Se usara la base de datos llamada prelaboratorio1

CREATE TABLE direccion ( -- Se crea una tabla llamada direccion que almacenara toda la informacion de las direcciones
    idDireccion INT(11) PRIMARY KEY, -- Identificador de la direccion, el dato sera con enteros y es la clave primaria de la tabla
    Direccion VARCHAR(45), -- La informacion de la direccion, el dato sera con caracteres
    Ciudad VARCHAR(45), -- La ciudad de la direccion, el dato sera con caracteres
    Pais VARCHAR(45) -- Pais de la direccion, el dato sera con caracteres
);

CREATE TABLE cliente ( -- Se crea una tabla llamada clientes que almacenara toda la informacion del cliente
    idCliente INT(11) PRIMARY KEY, -- Identificador para los clientes, el dato sera con enteros y es la clave primaria de la tabla
    Nombre VARCHAR(45), -- Nombre de los clientes, el dato sera con caracteres
    Apellido VARCHAR(45), -- Apellido de los clientes, el dato sera con caracteres
    Edad INT(11), -- Edad de los clientes, el dato sera con caracteros
    Direccion_idDireccion INT(11), -- Identificador de la direccion, el dato sera con enteros
    FOREIGN KEY (Direccion_idDireccion) REFERENCES direccion(idDireccion) -- La tabla cliente se relaciona con la tabla direccion y la llave foránea asegura que cada cliente tenga una dirección válida registrada en la tabla direccion
);

CREATE TABLE categoria ( -- Se crea una tabla llamada categoria que almacenara toda la informacion de las categorias
    idCategoria INT(11) PRIMARY KEY, -- Identificador de la categoria, el dato sera con enteros y es la clave primaria
    Nombre VARCHAR(45) -- Nombre de la categoria, el dato sera con caracteros
);

CREATE TABLE peliculas ( -- Se crea una tabla llamada peliculas que almacenara toda la informacion de las peliculas
    idPeliculas INT(11) PRIMARY KEY, -- Identificador para los clientes, el dato sera con enteros y es la clave primaria de la tabla
    Nombre VARCHAR(45), -- Nombre de la pelicula, el dato sera con caracteres
    Duracion INT(11), -- Duracion de la pelicula en minutos, el dato sera con enteros
    Descripcion TEXT, -- Descripcion de la pelicula, el dato sera con caracteres
    Año INT(11), -- Año de la creacion de la pelicula, el dato sera con enteros
    Categoria_idCategoria INT(11), -- Identificador de la categoria, el dato sera con enteros
    FOREIGN KEY (Categoria_idCategoria) REFERENCES categoria(idCategoria) -- La tabla peliculas se relaciona con la tabla categoria y la llave foránea asegura que cada pelicula tenga una categoria válida registrada en la tabla categoria
);

CREATE TABLE inventario (
    idCopiasPeliculas INT(11) PRIMARY KEY, -- Identificador para los clientes, el dato sera con enteros y es la clave primaria de la tabla
    Peliculas_idPeliculas INT(11), -- Identificador de las peliculas, el dato es con enteros
    Disponible TINYINT(1), -- Validando la disponibilidad de la renta, el dato es con enteros
    FOREIGN KEY (Peliculas_idPeliculas) REFERENCES peliculas(idPeliculas) -- La tabla inventario se relaciona con la tabla peliculas y la llave foránea asegura que cada inventario tenga una pelicula válida registrada en la tabla peliculas
);

CREATE TABLE renta (
    idRenta INT(11) PRIMARY KEY, -- Identificador para los clientes, el dato sera con enteros y es la clave primaria
    Fecha_Renta DATE, -- Fecha de la renta expuesta, el dato es con fecha
    Fecha_Entrega DATE, -- Fecha de entrega de la renta, el dato es con fecha
    Inventario_idCopiasPeliculas INT(11), -- Identificar de las copias de las peliculas en el inventario, el dato sera con enteros
    Cliente_idCliente INT(11), -- Identificador del cliente 
    FOREIGN KEY (Inventario_idCopiasPeliculas) REFERENCES inventario(idCopiasPeliculas), -- La tabla renta se relaciona con la tabla inventario y la llave foránea asegura que cada renta tenga un inventario válido registrada en la tabla inventario
    FOREIGN KEY (Cliente_idCliente) REFERENCES cliente(idCliente) -- La tabla renta se relaciona con la tabla cliente y la llave foránea asegura que cada renta tenga un cliente válido registrado en la tabla clientes
);

INSERT INTO direccion (idDireccion, Direccion, Ciudad, Pais) -- Se ingresara informacion a la tabla direccion, abarcando los campos creados para la tabla direccion 
VALUES 
(1, 'Miraflores', 'Ciudad de Guatemala', 'Guatemala'),
(2, 'Oakland Place', 'Ciudad de Guatemala', 'Guatemala'),
(3, 'Pradera Concepcion', 'Ciudad de Guatemala', 'Guatemala'),
(4, 'Naranjo Mall', 'Ciudad de Guatemala', 'Guatemala'),
(5, 'San Kris Mall', 'Ciudad de Guatemala', 'Guatemala');

INSERT INTO cliente (idCliente, Nombre, Apellido, Edad, Direccion_idDireccion) -- Se ingresara informacion a la tabla cliente, abarcando los campos creados para la tabla cliente 
VALUES 
(1, 'Diego', 'Rodas', 19, 1),
(2, 'María', 'Reyes', 20, 2),
(3, 'Fernanda', 'Castañeda', 16, 3),
(4, 'Ximena', 'Arroyo', 17, 4),
(5, 'Juliana', 'Ovalle', 18, 5);

INSERT INTO categoria (idCategoria, Nombre) -- Se ingresara informacion a la tabla categoria, abarcando los campos creados para la tabla categoria 
VALUES 
(1, 'Acción'),
(2, 'Comedia'),
(3, 'Drama'),
(4, 'Terror'),
(5, 'Ciencia Ficción');

INSERT INTO peliculas (idPeliculas, Nombre, Duracion, Descripcion, Año, Categoria_idCategoria) -- Se ingresara informacion a la tabla peliculas, abarcando los campos creados para la tabla peliculas 
VALUES 
(1, 'Pokemon1', 96, 'Ash y sus Pokémon se enfrentan a una criatura clonada.', 1998, 1),
(2, 'El club de la pelea', 139, 'Un oficinista busca un cambio en su vida y funda un club de peleas clandestino.', 1999, 2),
(3, 'El Padrino', 175, 'Drama sobre la familia Corleone', 1972, 3),
(4, 'Titanic', 194, 'Un romance a bordo del viaje inaugural del Titanic', 1997, 4),
(5, 'Volver al futuro', 116, 'Un adolescente viaja accidentalmente en el tiempo y debe asegurarse de que sus padres se enamoren.', 1985, 5);

INSERT INTO inventario (idCopiasPeliculas, Peliculas_idPeliculas, Disponible) -- Se ingresara informacion a la tabla inventario, abarcando los campos creados para la tabla inventario 
VALUES 
(1, 1, 1),
(2, 2, 0),
(3, 3, 1),
(4, 4, 1),
(5, 5, 0);

INSERT INTO renta (idRenta, Fecha_Renta, Fecha_Entrega, Inventario_idCopiasPelicuLas, Cliente_idCliente) -- Se ingresara informacion a la tabla renta, abarcando los campos creados para la tabla renta 
VALUES 
(1, '2025-01-15', '2025-01-22', 2, 1),
(2, '2025-02-10', '2025-02-17', 5, 2),
(3, '2025-03-05', '2025-03-12', 2, 3),
(4, '2025-04-20', '2025-04-27', 5, 4),
(5, '2025-05-12', '2025-05-19', 2, 5);

SELECT * FROM direccion; -- Selecciona la tabla de direccion en donde estan guardados los datos registrados para esa tabla
SELECT * FROM cliente; -- Selecciona la tabla de cliente en donde estan guardados los datos registrados para esa tabla
SELECT * FROM categoria; -- Selecciona la tabla de categoria en donde estan guardados los datos registrados para esa tabla
SELECT * FROM peliculas; -- Selecciona la tabla de peliculas en donde estan guardados los datos registrados para esa tabla
SELECT * FROM inventario; -- Selecciona la tabla de inventario en donde estan guardados los datos registrados para esa tabla
SELECT * FROM renta; -- Selecciona la tabla de renta en donde estan guardados los datos registrados para esa tabla

SELECT * FROM cliente WHERE Nombre = 'Juliana'; -- Selecciona la tabla de clientes, donde este el campo Nombre y donde exista el nombre Juliana 

DELETE FROM peliculas WHERE Nombre = 'Pokemon1'; -- Eliminara la pelicula Pokemon1 proveniente del campo Nombre y de la tabla peliculas

SELECT * FROM categoria ORDER BY Nombre ASC; -- Ordenara los datos del campo Nombre en orden ascendente de la tabla categoria 
SELECT * FROM peliculas ORDER BY Año DESC; -- Ordenara los datos del campo Año en orden descendiente de la tabla peliculas

CREATE TABLE pagos (
    idPago INT(11) PRIMARY KEY, -- Identificador para los clientes, el dato sera con enteros y es la clave primaria
    Renta_idRenta INT(11), -- Identificador del ID de la renta, el dato sera con enteros
    Monto INT, -- Monto del pago por la renta, el dato sera con enteros
    FechaPago DATE, -- Fecha maxima para hacer el pago por la renta, el dato sera con fecha
    MetodoPago VARCHAR(45), -- Metodo de pago por la renta, el dato sera con caracteres
    FOREIGN KEY (Renta_idRenta) REFERENCES renta(idRenta) -- La tabla pagos se relaciona con la tabla renta y la llave foránea asegura que cada pago tenga una renta válida registrada en la renta 
);

CREATE TABLE promociones (
    idPromocion INT(11) PRIMARY KEY, -- Identificador para los clientes, el dato sera con enteros y es la clave primaria
    pelicula_idPelicula INT(11), -- Identificador del ID de la pelicula, el dato sera con enteros
    fecha_inicio DATE, -- Fecha de inicio de la promocion, el dato sera con fecha
    fecha_fin DATE, -- Fecha de fin de la promocion, el dato sera con fehca
    activa TINYINT(1), -- Verificacion si la promocion esta activa, si es 1 esta disponible, si es 0 no esta disponible, el dato sera con enteros
    FOREIGN KEY (pelicula_idPelicula) REFERENCES peliculas(idPeliculas) -- La tabla promociones se relaciona con la tabla peliculas y la llave foránea asegura que cada promocion tenga una pelicula válida registrado en la tabla pelicula
);

INSERT INTO pagos (idPago, Renta_idRenta, Monto, FechaPago, MetodoPago)-- Se ingresara informacion a la tabla pagos, abarcando los campos creados para la tabla pagos 
VALUES
(1, 1, 120, '2025-01-15', 'Efectivo'),
(2, 2, 150, '2025-02-10', 'Tarjeta'),
(3, 3, 100, '2025-03-05', 'Efectivo'),
(4, 4, 150, '2025-04-20', 'Tarjeta'),
(5, 5, 120, '2025-05-12', 'Efectivo');

INSERT INTO promociones (idPromocion, pelicula_idPelicula, fecha_inicio, fecha_fin, activa) -- Se ingresara informacion a la tabla promociones, abarcando los campos creados para la tabla promociones 
VALUES
(1, 1, '2025-01-01', '2025-06-30', 0),
(2, 2, '2025-02-15', '2025-07-15', 1),
(3, 3, '2025-03-01', '2025-07-31', 0),
(4, 4, '2025-03-01', '2025-12-31', 1),
(5, 5, '2025-03-01', '2025-05-30', 0);

SELECT * FROM pagos; -- Selecciona la tabla de pagos en donde estan guardados los datos registrados para esa tabla
SELECT * FROM promociones; -- Selecciona la tabla de promociones en donde estan guardados los datos registrados para esa tabla